<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Emacs on M. Rincón</title><link>https://mrincon.net/tags/emacs/</link><description>Recent content in Emacs on M. Rincón</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>M. Rincón</copyright><lastBuildDate>Wed, 27 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://mrincon.net/tags/emacs/index.xml" rel="self" type="application/rss+xml"/><item><title>Eat Evil</title><link>https://mrincon.net/posts/eat/</link><pubDate>Wed, 27 Mar 2024 00:00:00 +0000</pubDate><guid>https://mrincon.net/posts/eat/</guid><description>&lt;p>
&lt;a href="https://codeberg.org/akib/emacs-eat">Eat&lt;/a> is a terminal emulator for Emacs available in &lt;code>NonGNU ELpa&lt;/code>. Eat is much slower than
foot, but faster than &lt;code>term.el&lt;/code>. It has some nice features like &lt;code>sixel&lt;/code> support, and being
able to send messages to Emacs. It also has some surprising idiosyncrasies which makes
adding Evil key bindings and other modifications challenging.&lt;/p>
&lt;p>
I think that the default state, semi char mode, captures too many key combinations. This
can be changed by modifying &lt;code>eat-semi-char-non-bound-keys&lt;/code> and reloading eat. But doing that
inside a &lt;code>whith-eval-after-load&lt;/code> block creates an infinite loop. To prevent the loop, the
reloading should be done inside a &lt;code>let&lt;/code> block:&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">with-eval-after-load&lt;/span> &lt;span class="ss">&amp;#39;eat&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">eat-semi-char-non-bound-keys&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">list&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="sc">?\C&lt;/span>&lt;span class="nv">-\\&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="sc">?\C&lt;/span>&lt;span class="nv">-w&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="sc">?\C&lt;/span>&lt;span class="nv">-h&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="sc">?\C&lt;/span>&lt;span class="nv">-x&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="sc">?\e&lt;/span> &lt;span class="sc">?x&lt;/span>&lt;span class="p">]))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">eat-update-semi-char-mode-map&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">let&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nv">after-load-alist&lt;/span> &lt;span class="no">nil&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">after-load-functions&lt;/span> &lt;span class="no">nil&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">eat-reload&lt;/span>&lt;span class="p">)))&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Though eat doesn&amp;#39;t work well with Evil, eat is a modal terminal emulator. And these modes
can be leveraged to make it a bit more evil. This requires starting eat with a new
function, &lt;code>my-eat-start&lt;/code>:&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">my-eat-end&lt;/span> &lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;Kill and close the eat buffer.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">interactive&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">eat-kill-process&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">kill-this-buffer&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">my-eat-emacs-mode&lt;/span> &lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;Help create a normal state with `eat-emacs-mode`.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">interactive&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">eat-emacs-mode&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">evil-define-key*&lt;/span> &lt;span class="ss">&amp;#39;normal&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">kbd&lt;/span> &lt;span class="s">&amp;#34;[[&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ss">&amp;#39;eat-previous-shell-prompt&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">evil-define-key*&lt;/span> &lt;span class="ss">&amp;#39;normal&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">kbd&lt;/span> &lt;span class="s">&amp;#34;]]&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ss">&amp;#39;eat-next-shell-prompt&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">evil-define-key*&lt;/span> &lt;span class="ss">&amp;#39;normal&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">kbd&lt;/span> &lt;span class="s">&amp;#34;i&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ss">&amp;#39;my-eat-semi-char-mode&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">evil-define-key*&lt;/span> &lt;span class="ss">&amp;#39;normal&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">kbd&lt;/span> &lt;span class="s">&amp;#34;gO&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ss">&amp;#39;browse-url&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">evil-define-key*&lt;/span> &lt;span class="ss">&amp;#39;normal&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">kbd&lt;/span> &lt;span class="s">&amp;#34;q&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ss">&amp;#39;my-eat-end&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">evil-normal-state&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">my-eat-semi-char-mode&lt;/span> &lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;Create bindings for `eat-mode` and switch to Emacs state.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">interactive&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">eat-semi-char-mode&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-w h&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;evil-window-left&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-w l&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;evil-window-right&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-w k&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;evil-window-up&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-w j&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;evil-window-down&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-w +&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;evil-window-increase-height&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-w -&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;evil-window-decrease-height&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-w &amp;lt;&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;evil-window-decrease-width&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-w &amp;gt;&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;evil-window-increase-width&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-w =&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;balance-windows&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-w R&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;evil-window-rotate-upwards&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-w r&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;evil-window-rotate-downwards&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-w W&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;evil-window-prev&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-w w&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;evil-window-next&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-w s&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;evil-window-split&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-w v&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;evil-window-vsplit&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-w _&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;evil-window-set-height&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-w |&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;evil-window-set-width&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-w c&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;evil-window-delete&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-w n&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;evil-window-new&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-w o&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;delete-other-windows&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-w p&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;evil-window-mru&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-w q&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;evil-quit&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-w N&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;my-eat-emacs-mode&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-\\ C-n&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;my-eat-emacs-mode&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-\\ C-p&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;eat-send-password&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-w \&amp;#34;&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;eat-yank&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-x b&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;switch-to-buffer&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-x k&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;my-eat-end&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">keymap-set&lt;/span> &lt;span class="nv">eat-mode-map&lt;/span> &lt;span class="s">&amp;#34;C-x p&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;eat-send-password&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">evil-emacs-state&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">goto-char&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">point-max&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">my-eat-start&lt;/span> &lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;Start Eat in the current project root directory in another window.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">interactive&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">require&lt;/span> &lt;span class="ss">&amp;#39;project&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">require&lt;/span> &lt;span class="ss">&amp;#39;eat&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">let*&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nv">proj&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">project-current&lt;/span> &lt;span class="no">nil&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">if&lt;/span> &lt;span class="nv">proj&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">let*&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nv">default-directory&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">project-root&lt;/span> &lt;span class="nv">proj&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">eat-buffer-name&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">project-prefixed-buffer-name&lt;/span> &lt;span class="s">&amp;#34;eat&amp;#34;&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">eat-other-window&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">switch-to-buffer&lt;/span> &lt;span class="nv">eat-buffer-name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">my-eat-semi-char-mode&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">progn&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">eat-other-window&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">switch-to-buffer&lt;/span> &lt;span class="nv">eat-buffer-name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">my-eat-semi-char-mode&lt;/span>&lt;span class="p">)))))&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Eat also provides great color support; however, if &lt;code>.bashrc&lt;/code> is making some color settings
based on the terminal name, the file needs to be modified.&lt;/p>
&lt;div class="src src-sh">
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">### Color support&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">case&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">TERM&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> in
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xterm-color&lt;span class="p">|&lt;/span>*-256color&lt;span class="p">|&lt;/span>foot&lt;span class="p">|&lt;/span>*-truecolor&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> Making color settings...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ,*&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> :&lt;span class="o">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -n &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$EAT_SHELL_INTEGRATION_DIR&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -r &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$EAT_SHELL_INTEGRATION_DIR&lt;/span>&lt;span class="s2">/bash&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># shellcheck source=/dev/null&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">source&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$EAT_SHELL_INTEGRATION_DIR&lt;/span>&lt;span class="s2">/bash&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
One nice thing about eat is that it can communicate with Emacs. With a few modifications,
eat can open a file inside the host Emacs. With this change the command &lt;code>_eat_msg open&lt;/code> will open
a file in Emacs.&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">my-eat-open&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;Helper function to open files from eat terminal.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">file-exists-p&lt;/span> &lt;span class="nv">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">find-file-other-window&lt;/span> &lt;span class="nv">file&lt;/span> &lt;span class="no">t&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="ne">warn&lt;/span> &lt;span class="s">&amp;#34;File doesn&amp;#39;t exist&amp;#34;&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nv">add-to-list&lt;/span> &lt;span class="ss">&amp;#39;eat-message-handler-alist&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">cons&lt;/span> &lt;span class="s">&amp;#34;open&amp;#34;&lt;/span> &lt;span class="ss">&amp;#39;my-eat-open&lt;/span>&lt;span class="p">))&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And for ease of use, the command can be aliased toe &lt;code>emopen&lt;/code> in &lt;code>.bashrc&lt;/code>.&lt;/p>
&lt;div class="src src-sh">
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">emopen&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;_eat_msg open&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div></description></item><item><title>Evil and the Built-In Tree Sitter</title><link>https://mrincon.net/posts/evil-ts/</link><pubDate>Sat, 25 Mar 2023 00:00:00 +0000</pubDate><guid>https://mrincon.net/posts/evil-ts/</guid><description>&lt;p>
The new Emacs 29 support for tree sitter awesome. Since I&amp;#39;m an &lt;a href="https://github.com/emacs-evil/evil">evil&lt;/a> user, I made a small
&lt;a href="https://github.com/foxfriday/evil-ts">package&lt;/a> to take advantage of the new facilities. If you are interested, the package is on
&lt;a href="https://github.com/foxfriday/evil-ts">GitHub here&lt;/a>. From the &lt;code>README&lt;/code>:&lt;/p>
&lt;p>
This package provides some basic additional actions for &lt;code>evil-mode&lt;/code> using the new built-in
tree sitter library. The package only works with Emacs 29 or greater. To activate, just
run &lt;code>M-x evil-ts-mode&lt;/code>. This was so easy to do, that it hardly merits a package. But perhaps
it will be useful to someone.&lt;/p>
&lt;p>
In visual mode, you can select a &lt;code>if/try/etc statement&lt;/code> with &lt;code>s&lt;/code>. So when you are inside an if
statement, the sequence &lt;code>vas&lt;/code> will select it. Similarly, &lt;code>f&lt;/code> selects a function and &lt;code>c&lt;/code> selects
a class. On these cases, there is no difference between inner and outer text objects.&lt;/p>
&lt;p>
In normal state, you can move to the beginning or the end of a class with &lt;code>[c&lt;/code> and &lt;code>]c&lt;/code>.
Similarly, &lt;code>[f&lt;/code> and &lt;code>]f&lt;/code> moves you to the start or end of a function. And &lt;code>[w&lt;/code> moves you to the
start of a sentence, and &lt;code>]w&lt;/code> to the end (these last two bindings are not great, but &lt;code>]s&lt;/code> is
usually taken for navigating spelling errors). I created this package for my own personal
use, so the default bindings may not be what you want. Of course, you can change that. The
mode map is &lt;code>evil-ts-mode-map&lt;/code>.&lt;/p></description></item><item><title>Adding mu4e Actions</title><link>https://mrincon.net/posts/mu4e-actions/</link><pubDate>Wed, 22 Feb 2023 00:00:00 +0000</pubDate><guid>https://mrincon.net/posts/mu4e-actions/</guid><description>&lt;p>
I like text emails. To the point that I would argue that &lt;code>html&lt;/code> doesn&amp;#39;t add significant
value to most messages. But sometimes it does. So I open those messages on my browser.
Unfortunately, &lt;a href="https://en.wikipedia.org/wiki/Snap_(software)">snaps&lt;/a> cannot access the &lt;code>/temp/&lt;/code> directory, and by default, that&amp;#39;s the
location Emacs and &lt;code>mu4e&lt;/code> use to save a message before calling the browser. Fortunately, the
default behavior can be easily changed. Better yet, it&amp;#39;s easy to leverage that change to
add new actions to &lt;code>mu4e&lt;/code>, like quickly converting an email into a &lt;code>pdf&lt;/code>.&lt;/p>
&lt;p>
The function &lt;code>mu4e-action-view-in-browser&lt;/code> does two things. First, it saves the &lt;code>html&lt;/code> part of
an email into a temporary folder. Then, it calls the function associated with
&lt;code>browse-url-browser-function&lt;/code> to opens the file. In Emacs the location of the temporary
directory is set by the &lt;code>temporary-file-directory&lt;/code> variable. To open a file using a snap, I
had to set the variable to something in my home directory. I thought about adding a new
directory to the &lt;code>.cache&lt;/code>, but I soon discovered that &lt;code>Firefox&lt;/code> doesn&amp;#39;t have access to it
either&lt;sup class="footnote-reference">&lt;a id="footnote-reference-1" href="#footnote-1">1&lt;/a>&lt;/sup>. So I settled for the rather inelegant solution of creating a temporary
directory inside Downloads.&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">defvar&lt;/span> &lt;span class="nv">extra-temp-email-dir&lt;/span> &lt;span class="s">&amp;#34;~/Downloads/tmp-mu/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;Location of temporary files for Emacs mu4e.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">extra-open-email-in-browser&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">msg&lt;/span> &lt;span class="kp">&amp;amp;optional&lt;/span> &lt;span class="nv">skip-headers&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;Show current MSG in browser if it includes an HTML-part.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">This is a wrapper function for `mu4e-action-view-in-browser`
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">needed to get around snaps inability to access the temp
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">directory. If SKIP-HEADERS is set, do not show include message
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">headers. The variables &lt;/span>&lt;span class="ss">`browse-url-browser-function&amp;#39;&lt;/span>&lt;span class="s">,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">&lt;/span>&lt;span class="ss">`browse-url-handlers&amp;#39;&lt;/span>&lt;span class="s">, and &lt;/span>&lt;span class="ss">`browse-url-default-handlers&amp;#39;&lt;/span>&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">determine which browser function to use.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">let*&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nv">temporary-file-directory&lt;/span> &lt;span class="nv">extra-temp-email-dir&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">unless&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">file-directory-p&lt;/span> &lt;span class="nv">temporary-file-directory&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">make-directory&lt;/span> &lt;span class="nv">temporary-file-directory&lt;/span> &lt;span class="no">t&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">mu4e-action-view-in-browser&lt;/span> &lt;span class="nv">msg&lt;/span> &lt;span class="nv">skip-headers&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">setq&lt;/span> &lt;span class="nv">mu4e-view-actions&lt;/span> &lt;span class="o">&amp;#39;&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="s">&amp;#34;capture message&amp;#34;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="nv">mu4e-action-capture-message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;view in browser&amp;#34;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="nv">extra-open-email-in-browser&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;show this thread&amp;#34;&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="nv">mu4e-action-show-thread&lt;/span>&lt;span class="p">)))&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Having gone this far, I decided to go a bit further and create a function, which instead
of opening the file, makes a &lt;code>pdf&lt;/code>.&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">extra-email-to-pdf&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">msg&lt;/span> &lt;span class="kp">&amp;amp;optional&lt;/span> &lt;span class="nv">args&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;Pdf temp file MSG to a new name with ARGS ignored.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">let*&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nv">async-shell-command-display-buffer&lt;/span> &lt;span class="no">nil&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">temp&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">format-time-string&lt;/span> &lt;span class="s">&amp;#34;~/Downloads/%Y-%m-%dT%H:%M.pdf&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">name&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">read-string&lt;/span> &lt;span class="s">&amp;#34;File name: &amp;#34;&lt;/span> &lt;span class="nv">temp&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">html&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">replace-regexp-in-string&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">regexp-quote&lt;/span> &lt;span class="s">&amp;#34;file://&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span> &lt;span class="nv">msg&lt;/span> &lt;span class="no">t&lt;/span> &lt;span class="no">t&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">if&lt;/span> &lt;span class="nv">args&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">message&lt;/span> &lt;span class="s">&amp;#34;Additional optional argument was ignored when saving to PDF.&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">async-shell-command&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">concat&lt;/span> &lt;span class="s">&amp;#34;pandoc &amp;#34;&lt;/span> &lt;span class="nv">html&lt;/span> &lt;span class="s">&amp;#34; -o &amp;#34;&lt;/span> &lt;span class="nv">name&lt;/span>&lt;span class="p">))))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">extra-print-email-to-pdf&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">msg&lt;/span> &lt;span class="kp">&amp;amp;optional&lt;/span> &lt;span class="nv">skip-headers&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;Save current MSG as a pdf if it includes an HTML-part.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">If SKIP-HEADERS is set, do not show include message headers.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">let*&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nv">browse-url-browser-function&lt;/span> &lt;span class="ss">&amp;#39;extra-email-to-pdf&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">mu4e-action-view-in-browser&lt;/span> &lt;span class="nv">msg&lt;/span> &lt;span class="nv">skip-headers&lt;/span>&lt;span class="p">)))&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And another function to save the &lt;code>html&lt;/code> part of the email.&lt;/p>
&lt;div class="src src-sh">
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>defun extra-move-temp-email-location &lt;span class="o">(&lt;/span>msg &lt;span class="p">&amp;amp;&lt;/span>optional args&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;Move and rename temp file MSG to a new location with ARGS ignored.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>let* &lt;span class="o">((&lt;/span>temp &lt;span class="o">(&lt;/span>format-time-string &lt;span class="o">(&lt;/span>concat extra-temp-email-dir
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;%Y-%m-%dT%H:%M.html&amp;#34;&lt;/span>&lt;span class="o">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>name &lt;span class="o">(&lt;/span>read-string &lt;span class="s2">&amp;#34;File name: &amp;#34;&lt;/span> temp&lt;span class="o">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>file &lt;span class="o">(&lt;/span>replace-regexp-in-string &lt;span class="o">(&lt;/span>regexp-quote &lt;span class="s2">&amp;#34;file://&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> msg t t&lt;span class="o">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>&lt;span class="k">if&lt;/span> args &lt;span class="o">(&lt;/span>message &lt;span class="s2">&amp;#34;Additional optional argument was ignored when saving to HTML.&amp;#34;&lt;/span>&lt;span class="o">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>rename-file file name&lt;span class="o">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>defun extra-save-email-html &lt;span class="o">(&lt;/span>msg &lt;span class="p">&amp;amp;&lt;/span>optional skip-headers&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;Save current MSG HTML-part.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">If SKIP-HEADERS is set, do not show include message headers.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>let* &lt;span class="o">((&lt;/span>extra-temp-email-dir &lt;span class="s2">&amp;#34;~/Downloads/&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>browse-url-browser-function &lt;span class="s1">&amp;#39;extra-move-temp-email-location))
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> (mu4e-action-view-in-browser msg skip-headers)))
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">(setq mu4e-view-actions &amp;#39;&lt;/span>&lt;span class="o">((&lt;/span>&lt;span class="s2">&amp;#34;capture message&amp;#34;&lt;/span> . mu4e-action-capture-message&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;view in browser&amp;#34;&lt;/span> . extra-open-email-in-browser&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;download as html&amp;#34;&lt;/span> . extra-save-email-html&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;print to PDF&amp;#34;&lt;/span> . extra-print-email-to-pdf&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;show this thread&amp;#34;&lt;/span> . mu4e-action-show-thread&lt;span class="o">)))&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
And another function to clean the temporary files.&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">extra-clean-temp-email-directory&lt;/span> &lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;Remove all files from DIR if possible.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">when&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">file-directory-p&lt;/span> &lt;span class="nv">extra-temp-email-dir&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">let&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nv">files&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">directory-files&lt;/span> &lt;span class="nv">extra-temp-email-dir&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="no">t&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">directory-files-no-dot-files-regexp&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">dolist&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">file&lt;/span> &lt;span class="nv">files&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">condition-case&lt;/span> &lt;span class="no">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">delete-file&lt;/span> &lt;span class="nv">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="ne">error&lt;/span> &lt;span class="no">nil&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">condition-case&lt;/span> &lt;span class="no">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">delete-directory&lt;/span> &lt;span class="nv">extra-temp-email-dir&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="ne">error&lt;/span> &lt;span class="no">nil&lt;/span>&lt;span class="p">)))))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nv">add-hook&lt;/span> &lt;span class="ss">&amp;#39;kill-emacs-hook&lt;/span> &lt;span class="ss">&amp;#39;extra-clean-temp-email-directory&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
So now, after opening an email, I can call &lt;code>mu4e-view-action&lt;/code> and print the email or save
it. And if all goes well, after closing Emacs, I won&amp;#39;t have a temporary folder in my
Downloads directory.&lt;/p>
&lt;p>
Finally, to encourage the use to text over &lt;code>html&lt;/code> on emails, I added two more lines to my
configuration.&lt;/p>
&lt;div class="src src-sh">
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>setq mm-discouraged-alternatives &lt;span class="o">(&lt;/span>list &lt;span class="s2">&amp;#34;image/.*&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;text/html&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;text/richtext&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> gnus-inhibit-images t&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div class="footnotes">
&lt;hr class="footnotes-separatator">
&lt;div class="footnote-definitions">
&lt;div class="footnote-definition">
&lt;sup id="footnote-1">&lt;a href="#footnote-reference-1">1&lt;/a>&lt;/sup>
&lt;div class="footnote-body">
&lt;p>I hope the benefits of Snaps offset the frustrating access rights, auto updates,
and other myriad of tiny annoyances —in addition to the fact that &lt;code>apt install&lt;/code> sneakily
contacts the snap store but makes you use &lt;code>snap refresh&lt;/code>, because you know, &lt;code>apt&lt;/code>, &lt;code>apt-get&lt;/code>,
&lt;code>cargo&lt;/code>, and &lt;code>pip&lt;/code> are just not enough.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Tracking Packages With Org-Mode</title><link>https://mrincon.net/posts/org-pacakges/</link><pubDate>Tue, 06 Dec 2022 00:00:00 +0000</pubDate><guid>https://mrincon.net/posts/org-pacakges/</guid><description>&lt;p>
December is the season to mail and receive packages. To keep track of them, I create a
&lt;code>TODO&lt;/code> item for each package in an Emacs&amp;#39; org file. I make note of the mailing date, the
content of the package, and the tracking number. The advantage of using Emacs is that a
few line of code can make the tracking numbers clickable.&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">org-link-track-ups&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">path&lt;/span> &lt;span class="nv">arg&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;Track a ups package where PATH is the tracking number.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">browse-url&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">url-encode-url&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">concat&lt;/span> &lt;span class="s">&amp;#34;https://www.ups.com/track?loc=en_US&amp;amp;tracknum=&amp;#34;&lt;/span> &lt;span class="nv">path&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">arg&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">org-link-track-usps&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">path&lt;/span> &lt;span class="nv">arg&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;Track a usps package where PATH is the tracking number.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">browse-url&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">url-encode-url&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">concat&lt;/span> &lt;span class="s">&amp;#34;https://tools.usps.com/go/TrackConfirmAction.action?tLabels=&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">path&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">arg&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">defun&lt;/span> &lt;span class="nv">org-link-track-fedex&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">path&lt;/span> &lt;span class="nv">arg&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;Track a fedex package where PATH is the tracking number.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">browse-url&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nv">url-encode-url&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">concat&lt;/span> &lt;span class="s">&amp;#34;https://www.fedex.com/fedextrack/?trknbr=&amp;#34;&lt;/span> &lt;span class="nv">path&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">arg&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nv">org-link-set-parameters&lt;/span> &lt;span class="s">&amp;#34;ups&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">:follow&lt;/span> &lt;span class="ss">&amp;#39;org-link-track-ups&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">:face&lt;/span> &lt;span class="o">&amp;#39;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">:foreground&lt;/span> &lt;span class="s">&amp;#34;green&amp;#34;&lt;/span> &lt;span class="nb">:underline&lt;/span> &lt;span class="no">t&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nv">org-link-set-parameters&lt;/span> &lt;span class="s">&amp;#34;usps&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">:follow&lt;/span> &lt;span class="ss">&amp;#39;org-link-track-usps&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">:face&lt;/span> &lt;span class="o">&amp;#39;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">:foreground&lt;/span> &lt;span class="s">&amp;#34;green&amp;#34;&lt;/span> &lt;span class="nb">:underline&lt;/span> &lt;span class="no">t&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nv">org-link-set-parameters&lt;/span> &lt;span class="s">&amp;#34;fedex&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">:follow&lt;/span> &lt;span class="ss">&amp;#39;org-link-track-fedex&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">:face&lt;/span> &lt;span class="o">&amp;#39;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">:foreground&lt;/span> &lt;span class="s">&amp;#34;green&amp;#34;&lt;/span> &lt;span class="nb">:underline&lt;/span> &lt;span class="no">t&lt;/span>&lt;span class="p">))&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Then, I can just type &lt;code>[[ups:&amp;lt;tracking number]]&lt;/code> in an org file and &lt;code>open-at-point&lt;/code>
lets me know where is my package.&lt;/p></description></item></channel></rss>